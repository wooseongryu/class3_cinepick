<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.cinepick.mapper.BookingMapper">
	<!-- step1 -->
	<select id="selectValidCity" resultType="Theater">
		SELECT
			CONCAT(c.city_name, "(", count(DISTINCT t.theater_idx) , ")") AS city_name
			, c.city_idx
		FROM schedule s 
			JOIN theater t 
			  ON s.sche_theater_idx = t.theater_idx
			JOIN city c 
			  ON t.city_idx = c.city_idx
		WHERE
			s.sche_movie_code = #{movie_code}
			AND CONCAT(s.sche_date, " ", s.sche_end_time) > now()
			<![CDATA[
			AND CONCAT(s.sche_date, " ", s.sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
		GROUP BY 
			c.city_name
			, c.city_idx
	</select>
	
	<select id="selectValidTheater" resultType="Theater">
		SELECT
			t.theater_name
			, t.theater_idx
		FROM schedule s 
			JOIN theater t 
			  ON s.sche_theater_idx = t.theater_idx
			JOIN city c 
			  ON t.city_idx = c.city_idx 
		WHERE
			s.sche_movie_code = #{movie_code}
			AND c.city_idx = #{city_idx}
			AND CONCAT(s.sche_date, " ", s.sche_end_time) > now()
			<![CDATA[
			AND CONCAT(s.sche_date, " ", s.sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
		GROUP BY
			t.theater_name
			, t.theater_idx
	</select>
	
	<select id="selectValidDate" resultType="ScheduleVO">
		SELECT DISTINCT sche_date 
		FROM schedule
		WHERE 
			sche_movie_code = #{movie_code}
			AND sche_theater_idx = #{theater_idx}
			AND CONCAT(sche_date, " ", sche_end_time) > now()
			<![CDATA[
			AND CONCAT(sche_date, " ", sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
		ORDER BY sche_date
		LIMIT 15
	</select>
	
	<select id="selectValidTime" resultType="ScheduleVO">
		SELECT 
			s1.sche_idx 
			, s1.sche_start_time
			, sc.screen_name
			, s1.sche_screen_idx
			, IFNULL((SELECT sc.screen_total_seat - sum(CHAR_LENGTH(seat_list) - CHAR_LENGTH(REPLACE(seat_list, '/', ''))) 
					FROM book b 
						JOIN schedule s2
						  ON b.sche_idx = s2.sche_idx
						JOIN screen sc
						  ON s2.sche_screen_idx = sc.screen_idx
					WHERE b.sche_idx = s1.sche_idx), sc.screen_total_seat) AS remainSeatCount
		FROM schedule s1 
			JOIN screen sc
			  ON s1.sche_screen_idx = sc.screen_idx
		WHERE s1.sche_movie_code = #{movie_code}
			AND s1.sche_theater_idx = #{theater_idx}
			AND s1.sche_date = #{date}
			AND CONCAT(s1.sche_date, " ", s1.sche_end_time) > now()
			<![CDATA[
			AND CONCAT(s1.sche_date, " ", s1.sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
		ORDER BY 
			s1.sche_screen_idx
			, s1.sche_start_time;
	</select>
	
	<select id="selectMovie" resultType="Movie">
		SELECT 
			movie_nameK
			, movie_poster
		FROM movie
		WHERE movie_code = ${movie_code}
	</select>
	
	<select id="selectMovies" resultType="Movie">
		SELECT DISTINCT movie_nameK
				, movie_code
				, movie_rated
		FROM movie m 
			JOIN schedule s 
			  ON s.sche_movie_code = m.movie_code
		WHERE 
			CONCAT(s.sche_date, " ", s.sche_end_time) >= now()
			<![CDATA[
			AND CONCAT(s.sche_date, " ", s.sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
			AND NOT movie_status = '상영종료'
		ORDER BY movie_nameK
	</select>
	
	<select id="selectSchedule" resultType="map">
		SELECT
			s.sche_idx
			, s.sche_date 
			, s.sche_start_time 	
			, s.sche_end_time 
			, m.movie_nameK 
			, m.movie_rated 
			, m.movie_poster 
			, t.theater_name 
			, sc.screen_name 
		FROM schedule s 
			JOIN movie m 
			  ON s.sche_movie_code = m.movie_code 
			JOIN theater t
			  ON s.sche_theater_idx  = t.theater_idx 
			JOIN screen sc
			  ON s.sche_screen_idx = sc.screen_idx 
		WHERE
			sche_movie_code = #{sche_movie_code}
			AND sche_theater_idx = #{sche_theater_idx}
			AND sche_date = #{sche_date}
			AND sche_start_time = #{sche_start_time}
			AND sche_screen_idx = #{sche_screen_idx}
	</select>
	
	<select id="checkValidCode" resultType="int">
		SELECT COUNT(DISTINCT movie_code)
		FROM movie m 
			JOIN schedule s 
			  ON s.sche_movie_code = m.movie_code
		WHERE 
			m.movie_code = #{movie_code}
			AND CONCAT(s.sche_date, " ", s.sche_end_time) >= now()
			<![CDATA[
			AND CONCAT(s.sche_date, " ", s.sche_end_time) <= date_add(now(),INTERVAL 1 MONTH)
			]]>
	</select>
	<!-- step1 끝 -->
	
	<!-- step2 시작 -->
	
	<insert id="insertPay" parameterType="map">
		INSERT
			INTO pay
			VALUES (
				#{merchant_uid}
				, #{moneySum}
				, #{pay_date}
			)
	</insert>
	
	<insert id="insertBook" parameterType="map">
		<selectKey keyProperty="book_id" resultType="String" order="AFTER">
			SELECT book_id
			FROM book
			WHERE user_id = #{user_id}
			ORDER BY book_id DESC
			LIMIT 1
		</selectKey>
		INSERT
			INTO book
			VALUES (
				CASE WHEN (SELECT MAX(idx) FROM book b) IS NULL THEN 1
			    ELSE ((SELECT MAX(idx) FROM book b) + 1) END
<!-- 				, (SELECT CONCAT('R', LPAD(COALESCE(MAX(SUBSTRING(book_id, 2) + 1), 1), 5, '0')) FROM book b) -->
				, concat((SELECT CONCAT('R', LPAD(COALESCE(MAX(SUBSTRING(book_id, 2, 5) + 1), 1), 5, '0')) FROM book b), '-', FLOOR(10000 + RAND() * 90000))
				, #{sche_idx}
				, #{seats}
				, #{allTickets}
				, #{user_id}
				, #{moneySum}
				, #{merchant_uid}
				, now()
			)
	</insert>
	
<!-- 예매 완료 페이지에서 티켓 보여주기 -->
	<select id="selectBook" resultType="Book">
		SELECT
			b.book_id
			, m.movie_nameK
			, t.theater_name
			, s.screen_name
			, sc.sche_date
			, TIME_FORMAT(sc.sche_start_time, '%H:%i') AS sche_start_time
<!-- 			, b.ticket_type -->
<!-- 			, b.seat_list -->
			, replace(b.ticket_type, '/', ' ') as ticket_type
			, replace(b.seat_list, '/', ' ') as seat_list
			, b.total_cost
			, m.movie_poster
		FROM book b
		JOIN schedule sc
		ON b.sche_idx = sc.sche_idx
		JOIN theater t
		ON sc.sche_theater_idx = t.theater_idx
		JOIN screen s
		ON s.screen_idx = sc.sche_screen_idx
		JOIN movie m
		ON sc.sche_movie_code = m.movie_code
		WHERE b.book_id = #{book_id};
	</select>

	<!-- 결제 성공시 TABLE seat에 sche_idx가 있으면 좌석 insert, 없으면 update -->
	<insert id="insertUpdateSeat" parameterType="map">
		INSERT INTO seat
			VALUES (#{sche_idx}, #{seats})
			ON duplicate KEY
		UPDATE seat_list = concat(seat_list, #{seats})
	</insert>
	
	<!-- step2에서 스케줄 번호로 예매완료된 좌석 가져오기 -->
	<select id="selectSeatList" parameterType="int">
		SELECT seat_list
			FROM seat
			WHERE sche_idx = #{sche_idx};
	</select>
	
	<!-- 아래는 마이페이지 티켓 추가 -->
	
	<select id="selectUserRecentBook" parameterType="map" resultType="Book">
		SELECT
			b.book_id
			, m.movie_nameK
			, t.theater_name
			, s.screen_name
			, sc.sche_date
			, TIME_FORMAT(sc.sche_start_time, '%H:%i') AS sche_start_time
			, replace(b.ticket_type, '/', ' ') as ticket_type
			, replace(b.seat_list, '/', ' ') as seat_list
			, b.total_cost
			, m.movie_poster
		FROM book b
		JOIN schedule sc
		ON b.sche_idx = sc.sche_idx
		JOIN theater t
		ON sc.sche_theater_idx = t.theater_idx
		JOIN screen s
		ON s.screen_idx = sc.sche_screen_idx
		JOIN movie m
		ON sc.sche_movie_code = m.movie_code
		WHERE user_id = #{user_id}
		AND sche_date > CURDATE() 
		AND sche_start_time > CURRENT_TIME()
		ORDER BY sc.sche_date, sc.sche_start_time
		LIMIT 1
		
	</select>
	
</mapper>