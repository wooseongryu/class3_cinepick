<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.cinepick.mapper.AdminMapper">
	<!-- 관리자 메인 -->
	<select id="countUser" resultType="int">
		SELECT COUNT(user_idx)
		FROM user;
	</select>
	
	<select id="selectRecentRegistMovie" resultType="movie">
		SELECT
			movie_code
			, movie_nameK
			, movie_openDt
			, movie_poster
		FROM movie
		WHERE movie_status = "개봉"
			<![CDATA[
			AND movie_openDt < now()
			]]>
		ORDER BY
			movie_openDt DESC
			, movie_code
		LIMIT 6
	</select>
	
	<select id="selectTodayScreen" resultType="int">
		SELECT COUNT(DISTINCT sche_movie_code)
		FROM schedule
		WHERE sche_date = date_format(now(), '%Y-%m-%d')
	</select>
	
	<select id="selectTodayBookCount" resultType="int">
		SELECT count(*)
		FROM book
		WHERE date_format(book_date, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d');
	</select>
	<!-- 관리자 메인 끝-->

	<!-- 회원 정보 관리 -->
	<update id="updateUserAuthorize">
		<selectKey keyProperty="user_is_admin" resultType="string" order="BEFORE">
			SELECT
				CASE
					WHEN user_is_admin = 'Y' THEN 'N'
					WHEN user_is_admin = 'N' THEN 'Y'
				END
			FROM user
			WHERE user_idx = #{user_idx}
		</selectKey>
		UPDATE user
		SET user_is_admin = #{user_is_admin}
		WHERE user_idx = #{user_idx}
	</update>
	<!-- 회원 정보 관리 끝 -->
	
	<!-- 상영 시간표 -->
	<select id="selectTheater" resultType="Theater">
		SELECT
			theater_idx
			, theater_name
		FROM theater
		<if test="sche_theater_idx != null and sche_theater_idx != -1">
		WHERE theater_idx = #{sche_theater_idx}
		</if>
	</select>
	
	<select id="selectScreen" resultType="Screen">
		SELECT
			screen_idx
			, screen_name
		FROM screen
		WHERE screen_theater_idx = #{screen_theater_idx}
	</select>
	
	<select id="selectMovie" resultType="movie">
		SELECT
			movie_code
			, movie_nameK
			, movie_rated
			, movie_openDt
		FROM movie
		WHERE movie_status != '상영종료';
	</select>
	
	<select id="selectMovieRunTime" resultType="int">
		SELECT SUBSTR(movie_runtime, 1, length(movie_runtime) - 3) as movie_runtime
		FROM movie 
		WHERE movie_code = #{sche_movie_code}
	</select>
	
	<select id="scheduleCheck" resultType="ScheduleVO">
		SELECT 
			sche_idx
			, sche_date
			, sche_start_time
			, sche_end_time
		FROM schedule
		WHERE
			sche_screen_idx = #{sche_screen_idx}
			AND sche_theater_idx = #{sche_theater_idx}
			AND sche_date = #{sche_date}
		ORDER BY sche_start_time;
	</select>
	
	<insert id="insertSchedule">
		INSERT INTO schedule
		VALUES(
			null
			, #{sche_date}
			, #{sche_start_time}
			, #{sche_end_time}
			, #{sche_movie_code}
			, #{sche_screen_idx}
			, #{sche_theater_idx}
		)
	</insert>
	
	<select id="selectSchedule" resultType="ScheduleVO">
		SELECT 
			sche_idx
			, sche_date
			, sche_start_time
			, sche_end_time
			, sche_movie_code
			, sche_screen_idx
			, sche_theater_idx
			, movie_nameK
			, theater_name
			, screen_name
			, movie_openDt
		FROM schedule s 
			JOIN movie m
			ON s.sche_movie_code = m.movie_code
			JOIN theater t
			ON s.sche_theater_idx = t.theater_idx
			JOIN screen sc
			ON s.sche_screen_idx = sc.screen_idx
		<if test="sche_idx != null and sche_idx != -1">
		WHERE sche_idx = #{sche_idx}
		</if>
	</select>
	
	<delete id="deleteSchedule">
		DELETE FROM schedule
		WHERE sche_idx = #{sche_idx}
	</delete>
	
	<update id="updateSchedule">
		UPDATE schedule
		SET 
			sche_date = #{sche_date}
			, sche_start_time = #{sche_start_time}
			, sche_end_time = #{sche_end_time}
			, sche_movie_code = #{sche_movie_code}
			, sche_screen_idx = #{sche_screen_idx}
			, sche_theater_idx = #{sche_theater_idx}
		WHERE sche_idx = #{sche_idx}
	</update>
	
	<select id="checkExistBook" resultType="int">
		select COUNT(*)
		from book
		where sche_idx = #{sche_idx}
	</select>
	<!-- 상영 시간표 끝 -->
	

	<!-- 공지 -->
	<insert id="insertNotice">
		INSERT INTO notice
		VALUES (
			null
			, #{noticeTitle}
			, #{noticeContent}
			, now()
		)
	</insert>
	
	<select id="selectNotice" resultType="Notice">
        SELECT
			noticeIdx
			, noticeTitle
			, noticeContent
			, noticeWriteDate
		FROM notice
		<if test="noticeIdx != null and !noticeIdx.equals('')">
		WHERE noticeIdx = #{noticeIdx }
		</if>
		ORDER BY noticeWriteDate DESC
    </select>


    <delete id="deleteNotice">
    	DELETE FROM notice
    	WHERE noticeIdx = #{noticeIdx };
    </delete>
    
    <update id="updateNotice">
    	UPDATE notice
    	SET 
    		noticeTitle = #{noticeTitle }
    		, noticeContent = #{noticeContent }
    	WHERE noticeIdx = #{noticeIdx };
    </update>
    <!-- 공지 끝 -->
    
    <!-- 자주 묻는 질문 -->
  	<insert id="insertQna">
		INSERT INTO qna
		VALUES (
			null
			, #{qnaTitle}
			, #{qnaContent}
			, #{qnaCategory}
		)
	</insert>

	<select id="selectQna" resultType="Qna">
		SELECT
			q.qnaIdx
			, q.qnaTitle
			, q.qnaContent
			, q.qnaCategory
			, c.qnaCateSubject 
		FROM
			qna q JOIN qnaCate c
			ON q.qnaCategory = c.qnaCateIdx
		<if test="qnaIdx != null and !qnaIdx.equals('')">
		WHERE q.qnaIdx = #{qnaIdx}
		</if>
    </select>
    
    <update id="updateQna">
    	UPDATE qna
    	SET
    		qnaTitle = #{qnaTitle}
			, qnaContent = #{qnaContent}
			, qnaCategory = #{qnaCategory}
		WHERE qnaIdx = #{qnaIdx}
    </update>
    
    <delete id="deleteQna">
    	DELETE FROM qna
    	WHERE qnaIdx = #{qnaIdx}
    </delete>
    <!-- 자주 묻는 질문 끝 -->

    <!-- 자주 묻는 질문 카테고리 -->
    <insert id="insertCategory">
		INSERT INTO qnaCate
		VALUES (
			null
			, #{qnaCateSubject}
		)
	</insert>

	<select id="selectCategory" resultType="QnaCate">
          SELECT 
          	qnaCateIdx 
          	, qnaCateSubject
          FROM qnaCate;
    </select>
    
    <delete id="deleteCategory">
    	DELETE FROM qnaCate
    	WHERE qnaCateIdx = #{qnaCateIdx}
    </delete>
    <!-- 자주 묻는 질문 카테고리 끝 -->
    
    <!-- 1:1문의 -->
    <select id="selectOTO" resultType="MyQuestion">
    	SELECT
    		myQuestion_num
			, myQuestion_id
			, myQuestion_subject
			, myQuestion_content
			, myQuestion_answer
			, myQuestion_status
			, myQuestion_date
		FROM myQuestion
		<if test="myQuestion_num != null and !myQuestion_num.equals('')">
		WHERE myQuestion_num = #{myQuestion_num}
		</if>
    </select>
    
    <update id="updateOTO">
    	UPDATE myQuestion
    	SET
    		myQuestion_answer = #{myQuestion_answer}
    		, myQuestion_status = "Y"
    	WHERE myQuestion_num = #{myQuestion_num}
    </update>
    <!-- 1:1문의 끝 -->
    
    <!-- 이벤트 -->
    <insert id="insertEvent">
    	INSERT INTO event
    	VALUES (
    		null
			, #{event_title}
			, #{event_startDt}
			, #{event_endDt}
			, #{event_poster}
			, #{event_thumbnail}
			, #{event_category}
    	)
    </insert>
    
    <select id="selectEvent" resultType="Event">
    	SELECT
    		e.event_idx
			, e.event_title
			, e.event_startDt
			, e.event_endDt
			, e.event_poster
			, e.event_thumbnail
			, c.eventCate_Subject
    	FROM
    		event e JOIN eventCate c
			ON e.event_category = c.eventCate_Idx
    	<if test="event_idx != null and !event_idx.equals('')">
		WHERE event_idx = #{event_idx}
		</if>
    </select>
    
    <update id="updateEvent">
    	UPDATE event
    	SET
			event_title = #{event_title}
			, event_startDt = #{event_startDt}
			, event_endDt = #{event_endDt}
			, event_poster = #{event_poster}
			, event_thumbnail = #{event_thumbnail}
			, event_category = #{event_category}
		WHERE event_idx = #{event_idx}
    </update>
    
    <delete id="deleteEvent">
    	DELETE FROM event
    	WHERE event_idx = #{event_idx};
    </delete>
    
    
    <!-- 이벤트 카테고리 -->
    <insert id="insertEventCategory">
		INSERT INTO eventCate
		VALUES (
			null
			, #{eventCate_Subject}
		)
	</insert>

	<select id="selectEventCategory" resultType="EventCate">
          SELECT 
          	eventCate_Idx 
          	, eventCate_Subject
          FROM eventCate
    </select>
    
    <delete id="deleteEventCategory">
    	DELETE FROM eventCate
    	WHERE eventCate_Idx = #{eventCate_Idx}
    </delete>
    <!-- 이벤트 카테고리 끝 -->
    
    
    <!-- 극장(영화관)  -->
	<insert id="insertTheater">
		INSERT INTO theater
		VALUES (
			null
			, #{brchNo}
			, #{city_idx}
			, #{theater_name}
			, #{theater_title}
			, #{theater_address}
			, #{theater_facility1}
			, #{theater_facility2}
			, #{theater_facility3}
			, #{theater_facility4}
		)
	</insert>
	
	
	<select id="selectAdminTheater" resultType="Theater">
        SELECT
			theater_idx
			, brchNo
			, theater_name
			, theater_title
			, theater_address
		FROM theater
		<if test="theaterIdx != null and !theaterIdx.equals('')">
		WHERE theater_idx = #{theaterIdx }
 		</if>
 		ORDER BY theater_idx DESC  
    </select>


    <delete id="deleteTheater">
    	DELETE FROM theater
    	WHERE theater_idx = #{theaterIdx };
    </delete>
    
    <update id="updateTheater">
    	UPDATE theater
    	SET 
    		theater_idx = #{theater_idx } 
    		, theater_name = #{theater_name }
    		, theater_title = #{theater_title }
    		, theater_address = #{theater_address}
    	WHERE theater_idx = #{theater_idx };
    </update>
    <!-- 극장(영화관) 끝 -->
    
	
	<!-- 상영관  -->
	<insert id="insertScreen">
		INSERT INTO screen
		VALUES (
			null
			, #{screen_name}
			, #{screen_total_seat}
			, #{screen_theater_idx}
		)
	</insert>
	
	
	<select id="selectAdminScreen" resultType="Screen">
        SELECT
			screen_idx
			, screen_name
			, screen_total_seat
			, screen_theater_idx
		FROM screen
		<if test="screenIdx != null and !screenIdx.equals('')">
		WHERE screen_idx = #{screenIdx }
 		</if>
 		ORDER BY screen_idx DESC  
    </select>


    <delete id="deleteScreen">
    	DELETE FROM screen
    	WHERE screen_idx = #{screenIdx };
    </delete>
    
    <!-- 상영관 삭제 -->	
	<select id="checkExistScreen" resultType="int">
		select COUNT(*)
		from schedule
		where sche_screen_idx = #{screenIdx }
	</select>
    
    <update id="updateScreen">
    	UPDATE screen
    	SET 
    		screen_name = #{screen_name }
    		,screen_total_seat = #{screen_total_seat }
    		, screen_theater_idx = #{screen_theater_idx}
    	WHERE screen_idx = #{screen_idx };
    </update>
   <!-- 상영관 끝 -->
   
	<!-- 리뷰 시작 -->
	<!-- 전체 리뷰 조회 -->
	<select id="selectReviewList" resultType="Review">
       SELECT
		review_num
		, review_rating
		, review_content
		, review_date
		, movie_code
		, user_id
	FROM review
	<if test="review_num != null and !review_num.equals('')">
	WHERE review_num = #{review_num }
	</if>
	ORDER BY review_date DESC
    </select>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteMyReview">
		DELETE FROM review
		WHERE review_num = #{review_num}
	</delete>
	
	<!-- 리뷰 끝 -->
	
	
	<!-- 스토어 -->
    <insert id="insertStore">
    	INSERT INTO store
    	VALUES (
    		null
			, #{store_short}
			, #{store_title}
			, #{store_price}
			, #{store_thumbnail}
			, #{store_category}
    	)
    </insert>
    
    <select id="selectStore" resultType="Store">
    	SELECT
    		s.store_idx
			, s.store_short
			, s.store_title
			, s.store_price
			, s.store_thumbnail
			, s.store_category
			, sc.storeCate_Subject
    	FROM
    		store s
    		JOIN storeCate sc
			ON s.store_category = sc.storeCate_Idx
    	<if test="store_idx != null and !store_idx.equals('')">
		WHERE store_idx = #{store_idx}
		</if>
    </select>
    
    <update id="updateStore">
    	UPDATE store
    	SET
			store_short = #{store_short}
			, store_title = #{store_title}
			, store_price = #{store_price}
			, store_thumbnail = #{store_thumbnail}
			, store_category = #{store_category}
		WHERE store_idx = #{store_idx}
    </update>
    
    
    <delete id="deleteStore">
    	DELETE FROM store
    	WHERE store_idx = #{store_idx};
    </delete>
    
     <!-- 스토어 카테고리 -->
    <insert id="insertStoreCategory">
		INSERT INTO storeCate
		VALUES (
			null
			, #{storeCate_Subject}
		)
	</insert>

	<select id="selectStoreCategory" resultType="StoreCate">
          SELECT 
          	storeCate_Idx 
          	, storeCate_Subject
          FROM storeCate
    </select>
    
    <delete id="deleteStoreCategory">
    	DELETE FROM storeCate
    	WHERE storeCate_Idx = #{storeCate_Idx}
    </delete>
    <!-- 스토어 카테고리 끝 -->
    
    
	<!-- 예매 시작  -->
	
	<select id="selectBookList" resultType="Book">
		SELECT 
			b.book_id
			, user_id
			, m.movie_nameK
			, t.theater_name
			, sc.screen_name 
			, b.seat_list
			, b.ticket_type
			, s.sche_start_time 
			, s.sche_end_time 
			, m.movie_runtime
			, b.book_date
			, b.total_cost
		FROM book b 
			JOIN schedule s 
			  ON b.sche_idx = s.sche_idx
			JOIN movie m  
			  ON s.sche_movie_code = m.movie_code
			JOIN theater t 
			  ON s.sche_theater_idx = t.theater_idx
			JOIN screen sc 
 			  ON s.sche_screen_idx = sc.screen_idx
	<if test="book_id != null and !book_id.equals('')">
		WHERE book_id = #{book_id }
	</if>
	ORDER BY book_id;
	</select>
	
	<!-- 예매 끝  -->
    
</mapper>